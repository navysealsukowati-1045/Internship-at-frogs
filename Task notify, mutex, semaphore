#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define LED_PIN  37
#define BTN_PIN  0

Adafruit_SSD1306 display(128, 64, &Wire);

TaskHandle_t task_led_handle = NULL;
TaskHandle_t task_oled_handle = NULL;

// ISR tombol
void IRAM_ATTR button_isr() {
  BaseType_t higher_priority_task_woken = pdFALSE;
  vTaskNotifyGiveFromISR(task_led_handle, &higher_priority_task_woken);
  portYIELD_FROM_ISR(higher_priority_task_woken);
}

// Task LED
void task_led(void *pv_parameters) {
  bool state = false;
  for (;;) {
    // Tunggu notifikasi dari ISR tombol
    ulTaskNotifyTake(pdTRUE, portMAX_DELAY);

    state = !state;
    digitalWrite(LED_PIN, state);

    // Kirim status LED ke task OLED via notify
    uint32_t value_to_send = state ? 1 : 0;
    xTaskNotify(task_oled_handle, value_to_send, eSetValueWithOverwrite);
  }
}

// Task OLED
void task_oled(void *pv_parameters) {
  uint32_t led_status;
  for (;;) {
    // Tunggu notifikasi dari task LED
    xTaskNotifyWait(0, 0, &led_status, portMAX_DELAY);

    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(led_status ? "LED: ON" : "LED: OFF");
    display.display();
  }
}

void setup() {
  Serial.begin(115200);

  pinMode(LED_PIN, OUTPUT);
  pinMode(BTN_PIN, INPUT_PULLUP);

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("OLED gagal!");
    for (;;);
  }
  display.clearDisplay();
  display.display();

  // Buat task
  xTaskCreatePinnedToCore(task_led, "task_led", 2048, NULL, 2, &task_led_handle, 1);
  xTaskCreatePinnedToCore(task_oled, "task_oled", 4096, NULL, 1, &task_oled_handle, 1);

  // Attach interrupt tombol
  attachInterrupt(BTN_PIN, button_isr, FALLING);

  // Tampilkan pesan awal
  display.setTextSize(2);
  display.setCursor(0, 0);
  display.println("System Ready");
  display.display();
}

void loop() {
  // kosong, RTOS yang jalan
}
